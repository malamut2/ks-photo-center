<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.wolfgang-kronberg</groupId>
    <artifactId>ks-photo-center</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>

        <!-- Java language version -->
        <maven.compiler.source>12</maven.compiler.source>
        <maven.compiler.target>12</maven.compiler.target>

        <!-- Encoding of our source files -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Settings for the license plugin -->
        <license.licenseName>mit</license.licenseName>
        <project.organization.name>Wolfgang Kronberg</project.organization.name>
        <project.inceptionYear>2019</project.inceptionYear>
        <license.useMissingFile>true</license.useMissingFile>

    </properties>

    <repositories> <!-- required by fontawesomefx -->
        <repository>
            <id>bintray-central</id>
            <name>bintray</name>
            <url>https://jcenter.bintray.com</url>
        </repository>
    </repositories>

    <dependencies>

        <dependency> <!-- required for beautifully simple@Data annotation -->
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.6</version>
            <scope>provided</scope>
        </dependency>

        <dependency> <!-- JavaFX, our graphics/layout engine -->
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>12</version>
        </dependency>

        <dependency> <!-- H2, our embedded SQL database -->
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.199</version>
        </dependency>

        <dependency> <!-- Accessing metadata of images, most notably JPEGs -->
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
            <version>2.11.0</version>
        </dependency>

        <dependency> <!-- All our nice icons -->
            <groupId>de.jensd</groupId>
            <artifactId>fontawesomefx-commons</artifactId>
            <version>8.11</version>
        </dependency>

        <dependency> <!-- Standard Unit Test engine -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.4.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.4.2</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin> <!-- Activate compiler warnings on unchecked operations -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <compilerArgs>
                        <arg>-Xlint:unchecked</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin> <!-- Create a fully self-contained jar with all dependencies -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.4.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <classifier>spring-boot</classifier>
                            <mainClass>Main</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin> <!-- Create a custom, minimal JVM package -->
                <groupId>com.igormaznitsa</groupId>
                <artifactId>mvn-jlink-wrapper</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
                        <id>call-jdeps</id>
                        <goals>
                            <goal>jdeps</goal>
                        </goals>
                        <configuration>
                            <output>${project.build.directory}${file.separator}jdeps.out</output>
                            <options>
                                <option>${project.build.directory}${file.separator}${project.build.finalName}.jar</option>
                            </options>
                        </configuration>
                    </execution>
                    <execution>
                        <id>call-jlink</id>
                        <goals>
                            <goal>jlink</goal>
                        </goals>
                        <configuration>
                            <jdepsReportPath>${project.build.directory}${file.separator}jdeps.out</jdepsReportPath>
                            <output>${project.build.directory}${file.separator}preparedJDK</output>
                            <options>
                                <option>--compress=2</option>
                                <option>--no-header-files</option>
                                <option>--no-man-pages</option>
                                <option>--strip-debug</option>
                            </options>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin> <!-- Provide third-party license information -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.20</version>
                <executions>
                    <execution>
                        <id>add-third-party</id>
                        <goals>
                            <goal>add-third-party</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>update-project-license</id>
                        <goals>
                            <goal>update-project-license</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>